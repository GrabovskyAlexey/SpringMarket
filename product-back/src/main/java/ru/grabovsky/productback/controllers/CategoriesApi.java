/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.0.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.grabovsky.productback.controllers;

import ru.grabovsky.productback.dto.CategoryDto;
import ru.grabovsky.productback.dto.MessageDto;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-09-05T13:33:16.395512+03:00[Europe/Moscow]")
@Validated
@Tag(name = "categories", description = "the categories API")
public interface CategoriesApi {

    default CategoriesApiDelegate getDelegate() {
        return new CategoriesApiDelegate() {};
    }

    /**
     * GET /categories : Get all categories
     *
     * @return list of all categories (status code 200)
     *         or Bad Request (status code 400)
     */
    @Operation(
        operationId = "getAllCategories",
        summary = "Get all categories",
        tags = { "categories" },
        responses = {
            @ApiResponse(responseCode = "200", description = "list of all categories", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CategoryDto.class))
            }),
            @ApiResponse(responseCode = "400", description = "Bad Request", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = MessageDto.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/categories",
        produces = { "application/json" }
    )
    default ResponseEntity<List<CategoryDto>> getAllCategories(
        
    ) {
        return getDelegate().getAllCategories();
    }

}
